version: '3.7'
services:
    fieldsets-postgres:
        image: ${CONTAINER_REGISTRY:-fieldsets}/docker-postgres:${VERSION:-latest}
        build:
            context: ./
            dockerfile: ${POSTGRES_CONFIG_PATH:-./}Dockerfile
            args:
                TIMEZONE: ${TIMEZONE:-America/New_York}
                POSTGRES_VERSION: ${POSTGRES_VERSION:-15}
                FDW_PATH: /usr/src
                LOCAL_UID: ${LOCAL_UID:-1000}
                POSTGRES_DB: ${POSTGRES_DB:-fieldsets}
        container_name: fieldsets-postgres
        hostname: fieldsets-postgres
        ports:
            - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
        environment:
            VERSION: ${VERSION:-latest}
            ENVIRONMENT: ${ENVIRONMENT:-dev-local}
            LOGGER_HOST: ${LOGGER_HOST:-172.28.0.2}
            LOGGER_PORT: ${LOGGER_PORT:-24224}
            FDW_PATH: /usr/src
            SSH_HOST: ${SSH_HOST:-}
            FIELDSETS_LOCAL_HOST: ${FIELDSETS_LOCAL_HOST:-172.28.0.6}
            POSTGRES_VERSION: ${POSTGRES_VERSION:-15}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fieldsets}
            POSTGRES_HOST: ${POSTGRES_HOST:-172.28.0.7}
            POSTGRES_DB: ${POSTGRES_DB:-fieldsets}
            POSTGRES_PORT: ${POSTGRES_PORT:-5432}
            POSTGRES_INITDB_WALDIR: /var/lib/postgresql/logs
            POSTGRES_READER_ROLE: ${POSTGRES_READER_ROLE:-fieldsets_reader_role}
            POSTGRES_READER_ROLE_PASSWORD: ${POSTGRES_READER_ROLE_PASSWORD:-}
            POSTGRES_WRITER_ROLE: ${POSTGRES_WRITER_ROLE:-fieldsets_writer_role}
            POSTGRES_WRITER_ROLE_PASSWORD: ${POSTGRES_WRITER_ROLE_PASSWORD:-}
            POSTGRES_TRIGGER_ROLE: ${POSTGRES_TRIGGER_ROLE:-fieldsets_trigger_role}
            POSTGRES_TRIGGER_ROLE_PASSWORD: ${POSTGRES_TRIGGER_ROLE_PASSWORD:-}
            DEBUG_MODE: ${DEBUG_MODE:-true}
            LOGGING_ENABLED: ${LOGGING_ENABLED:-false}
        stop_signal: SIGTERM
        stop_grace_period: 1m30s
        oom_kill_disable: true
        deploy:
            resources:
                limits:
                    memory: ${SYSTEM_MEMORY:-8G}
        volumes:
            - ${POSTGRES_CONFIG_PATH:-./}initdb/sql/:/fieldsets-sql/
            - ${POSTGRES_CONFIG_PATH:-./}postgresql.conf:/etc/postgresql/postgresql.conf
            - ${POSTGRES_CONFIG_PATH:-./}cron.conf:/etc/postgresql/conf.d/cron.conf
            - ${POSTGRES_CONFIG_PATH:-./}initdb/:/docker-entrypoint-initdb.d/
            - postgres-data:/var/lib/postgresql/data
            - postgres-logs:/var/lib/postgresql/logs
            - postgres-archive:/var/lib/postgresql/archive
            - postgres-pipeline:/var/lib/postgresql/pipeline
        networks:
            default:
                ipv4_address: ${POSTGRES_HOST:-172.28.0.7}
        logging:
            driver: fluentd
            options:
                fluentd-address: ${LOGGER_HOST:-172.28.0.2}:${LOGGER_PORT:-24224}
                tag: debug_log.postgres
                fluentd-async: "true"
                env: "PGOPTIONS='-c search_path=pipeline',LOGGING_ENABLED='${LOGGING_ENABLED:-false}'"
volumes:
    postgres-data:
        driver: local
        name: fieldsets-postgres-data
    postgres-logs:
        driver: local
        name: fieldsets-postgres-logs
    postgres-archive:
        driver: local
        name: fieldsets-postgres-archive
    postgres-pipeline:
        driver: local
        name: fieldsets-postgres-pipeline

networks:
    default:
        driver: bridge
        name: fieldsets_network
        attachable: true
        ipam:
            config:
            - subnet: ${FIELDSETS_NETWORK_SUBNET:-172.28.0.0/24}